/**
 * Autogenerated by Thrift Compiler (1.0.0-dev)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace bench
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class CalculationData : TBase
  {
    private int _a;
    private int _b;

    public int A
    {
      get
      {
        return _a;
      }
      set
      {
        __isset.a = true;
        this._a = value;
      }
    }

    public int B
    {
      get
      {
        return _b;
      }
      set
      {
        __isset.b = true;
        this._b = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool a;
      public bool b;
    }

    public CalculationData() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              A = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              B = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("CalculationData");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.a) {
        field.Name = "a";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(A);
        oprot.WriteFieldEnd();
      }
      if (__isset.b) {
        field.Name = "b";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(B);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("CalculationData(");
      bool __first = true;
      if (__isset.a) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("A: ");
        __sb.Append(A);
      }
      if (__isset.b) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("B: ");
        __sb.Append(B);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
